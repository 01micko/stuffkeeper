/* Generated by GOB (v2.0.14)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>
#ifndef __STUFFKEEPER_DATA_BACKEND_H__
#define __STUFFKEEPER_DATA_BACKEND_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



    #include "stuffkeeper-data-item.h"



    #include <stdio.h>


/*
 * Type checking and casting macros
 */
#define STUFFKEEPER_TYPE_DATA_BACKEND	(stuffkeeper_data_backend_get_type())
#define STUFFKEEPER_DATA_BACKEND(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), stuffkeeper_data_backend_get_type(), StuffKeeperDataBackend)
#define STUFFKEEPER_DATA_BACKEND_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), stuffkeeper_data_backend_get_type(), StuffKeeperDataBackend const)
#define STUFFKEEPER_DATA_BACKEND_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), stuffkeeper_data_backend_get_type(), StuffKeeperDataBackendClass)
#define STUFFKEEPER_IS_DATA_BACKEND(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), stuffkeeper_data_backend_get_type ())

#define STUFFKEEPER_DATA_BACKEND_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), stuffkeeper_data_backend_get_type(), StuffKeeperDataBackendClass)

/* Private structure type */
typedef struct _StuffKeeperDataBackendPrivate StuffKeeperDataBackendPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_STUFFKEEPER_DATA_BACKEND__
#define __TYPEDEF_STUFFKEEPER_DATA_BACKEND__
typedef struct _StuffKeeperDataBackend StuffKeeperDataBackend;
#endif
struct _StuffKeeperDataBackend {
	GObject __parent__;
	/*< private >*/
	StuffKeeperDataBackendPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _StuffKeeperDataBackendClass StuffKeeperDataBackendClass;
struct _StuffKeeperDataBackendClass {
	GObjectClass __parent__;
	/*signal*/void (* item_changed) (StuffKeeperDataBackend * self, StuffKeeperDataItem * item);
	/*signal*/void (* item_added) (StuffKeeperDataBackend * self, StuffKeeperDataItem * item);
	/*signal*/void (* item_removed) (StuffKeeperDataBackend * self, gint id);
};


/*
 * Public methods
 */
GType	stuffkeeper_data_backend_get_type	(void);
void 	stuffkeeper_data_backend_item_changed	(StuffKeeperDataBackend * self,
					StuffKeeperDataItem * item);
void 	stuffkeeper_data_backend_item_added	(StuffKeeperDataBackend * self,
					StuffKeeperDataItem * item);
void 	stuffkeeper_data_backend_item_removed	(StuffKeeperDataBackend * self,
					gint id);
StuffKeeperDataItem * 	stuffkeeper_data_backend_get_item	(StuffKeeperDataBackend * self,
					gint id);
StuffKeeperDataItem * 	stuffkeeper_data_backend_new_item	(StuffKeeperDataBackend * self);
void 	stuffkeeper_data_backend_remove_item	(StuffKeeperDataBackend * self,
					gint id);
void 	stuffkeeper_data_backend_load	(StuffKeeperDataBackend * self);
StuffKeeperDataBackend * 	stuffkeeper_data_backend_new	(void);

/*
 * Signal connection wrapper macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define stuffkeeper_data_backend_connect__item_changed(object,func,data)	g_signal_connect(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_changed",(GCallback) __extension__ ({void (* ___item_changed) (StuffKeeperDataBackend * ___fake___self, StuffKeeperDataItem * ___fake___item, gpointer ___data ) = (func); ___item_changed; }), (data))
#define stuffkeeper_data_backend_connect_after__item_changed(object,func,data)	g_signal_connect_after(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_changed",(GCallback) __extension__ ({void (* ___item_changed) (StuffKeeperDataBackend * ___fake___self, StuffKeeperDataItem * ___fake___item, gpointer ___data ) = (func); ___item_changed; }), (data))
#define stuffkeeper_data_backend_connect_data__item_changed(object,func,data,destroy_data,flags)	g_signal_connect_data(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_changed",(GCallback) __extension__ ({void (* ___item_changed) (StuffKeeperDataBackend * ___fake___self, StuffKeeperDataItem * ___fake___item, gpointer ___data ) = (func); ___item_changed; }), (data), (destroy_data), (GConnectFlags)(flags))
#define stuffkeeper_data_backend_connect__item_added(object,func,data)	g_signal_connect(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_added",(GCallback) __extension__ ({void (* ___item_added) (StuffKeeperDataBackend * ___fake___self, StuffKeeperDataItem * ___fake___item, gpointer ___data ) = (func); ___item_added; }), (data))
#define stuffkeeper_data_backend_connect_after__item_added(object,func,data)	g_signal_connect_after(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_added",(GCallback) __extension__ ({void (* ___item_added) (StuffKeeperDataBackend * ___fake___self, StuffKeeperDataItem * ___fake___item, gpointer ___data ) = (func); ___item_added; }), (data))
#define stuffkeeper_data_backend_connect_data__item_added(object,func,data,destroy_data,flags)	g_signal_connect_data(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_added",(GCallback) __extension__ ({void (* ___item_added) (StuffKeeperDataBackend * ___fake___self, StuffKeeperDataItem * ___fake___item, gpointer ___data ) = (func); ___item_added; }), (data), (destroy_data), (GConnectFlags)(flags))
#define stuffkeeper_data_backend_connect__item_removed(object,func,data)	g_signal_connect(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_removed",(GCallback) __extension__ ({void (* ___item_removed) (StuffKeeperDataBackend * ___fake___self, gint ___fake___id, gpointer ___data ) = (func); ___item_removed; }), (data))
#define stuffkeeper_data_backend_connect_after__item_removed(object,func,data)	g_signal_connect_after(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_removed",(GCallback) __extension__ ({void (* ___item_removed) (StuffKeeperDataBackend * ___fake___self, gint ___fake___id, gpointer ___data ) = (func); ___item_removed; }), (data))
#define stuffkeeper_data_backend_connect_data__item_removed(object,func,data,destroy_data,flags)	g_signal_connect_data(STUFFKEEPER_DATA_BACKEND(__extension__ ({StuffKeeperDataBackend *___object = (object); ___object; })),"item_removed",(GCallback) __extension__ ({void (* ___item_removed) (StuffKeeperDataBackend * ___fake___self, gint ___fake___id, gpointer ___data ) = (func); ___item_removed; }), (data), (destroy_data), (GConnectFlags)(flags))
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define stuffkeeper_data_backend_connect__item_changed(object,func,data)	g_signal_connect(STUFFKEEPER_DATA_BACKEND(object),"item_changed",(GCallback)(func),(data))
#define stuffkeeper_data_backend_connect_after__item_changed(object,func,data)	g_signal_connect_after(STUFFKEEPER_DATA_BACKEND(object),"item_changed",(GCallback)(func),(data))
#define stuffkeeper_data_backend_connect_data__item_changed(object,func,data,destroy_data,flags)	g_signal_connect_data(STUFFKEEPER_DATA_BACKEND(object),"item_changed",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define stuffkeeper_data_backend_connect__item_added(object,func,data)	g_signal_connect(STUFFKEEPER_DATA_BACKEND(object),"item_added",(GCallback)(func),(data))
#define stuffkeeper_data_backend_connect_after__item_added(object,func,data)	g_signal_connect_after(STUFFKEEPER_DATA_BACKEND(object),"item_added",(GCallback)(func),(data))
#define stuffkeeper_data_backend_connect_data__item_added(object,func,data,destroy_data,flags)	g_signal_connect_data(STUFFKEEPER_DATA_BACKEND(object),"item_added",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define stuffkeeper_data_backend_connect__item_removed(object,func,data)	g_signal_connect(STUFFKEEPER_DATA_BACKEND(object),"item_removed",(GCallback)(func),(data))
#define stuffkeeper_data_backend_connect_after__item_removed(object,func,data)	g_signal_connect_after(STUFFKEEPER_DATA_BACKEND(object),"item_removed",(GCallback)(func),(data))
#define stuffkeeper_data_backend_connect_data__item_removed(object,func,data,destroy_data,flags)	g_signal_connect_data(STUFFKEEPER_DATA_BACKEND(object),"item_removed",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
