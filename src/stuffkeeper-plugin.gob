requires 2.0.10

%h{
#include "stuffkeeper-data-backend.h"
typedef enum _PluginType {
    PLUGIN_NONE = 0,
    PLUGIN_ITEM = 1,        /* this works on a single item */
    PLUGIN_BACKGROUND = 2,  /* This gets called at startup */
    PLUGIN_MENU = 4         /* Gets called from the menu */
}PluginType;

%}
/**
 * Stuffkeeper plugin needs to implement the run function
 * a register_plugin function
 * And set plugin name.
 */
%h{
    /*
     * gchar *plugin_name = "Plugin name";
     *
     * * In case off Stuffkeeper:Plugin:Test:
     * GType register_plugin() { return stuffkeeeper_plugin_test_get_type();}
     */
    GType register_plugin();
    /*
     * PluginType plugin_type = PLUGIN_ITEM|PLUGIN_MENU;
     */
%}

class Stuffkeeper:Plugin from G:Object
{
    virtual
    PluginType
    get_plugin_type(self)
    {
        return PLUGIN_NONE;
    }

    virtual
    const gchar *
    get_name(self)
    {
        return "Stuffkeeper:Plugin:get_name() not implemented";
    }
    /* Called on a single item */
    virtual 
    void
    run_item(self, StuffkeeperDataItem *item)
    {
        printf("This function should be overrided by the plugin\n");
    }

    /* called from the menu */
    virtual
    void
    run_menu(self,StuffkeeperDataBackend *skdb)
    {
        printf("This function should be overrided by the plugin\n");
    }

    /* background */
    virtual
    void
    run_background(self,StuffkeeperDataBackend *skdb)
    {
        printf("This function should be overrided by the plugin\n");
    }

    /* The icon that should be used for the plugin, for now used in the menu's */
    virtual
    GdkPixbuf *
    get_icon(self)
    {
        return NULL;
    }
}
